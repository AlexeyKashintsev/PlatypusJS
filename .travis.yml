# we can validate our .yml config
# gem install travis --no-rdoc --no-ri
# travis lint [path to your .travis.yml]

# we'll try to use container based infrastructure
sudo: false
# sudo: required

language: java


jdk:
  - oraclejdk8

    
git:
  depth: 1


services:
  - docker

before_install:
  - git clone --depth=1 https://github.com/altsoft/PlatypusTests.git platypusTests
  - docker pull altsoft/platypus
  - docker pull altsoft/testdb
  - docker run --name=testDb -p 3307:3306 -d altsoft/testdb
  - docker run --name=platypus -d -v `pwd`:/platypus -v `pwd`/platypusTests:/platypusTests --link testDb:testDb -p 8500:8500 -p 8080:8080 altsoft/platypus 
  - # docker/platypus.js/installTravisJava.sh
  - # echo $(java -version)
  - sleep 120
  # - until nc -z $(docker inspect --format='{{.NetworkSettings.IPAddress}}' platypus) 8500 do echo "Waiting servers start..." sleep 0.5 done

before_script:
  - docker exec platypus /bin/bash -c "Xvfb :1 -screen 0 640x480x24 -fbdir /var/tmp&"
#   - sh -e /etc/init.d/xvfb start
#   - sleep 5
#   - export DISPLAY=:99.0

script:
  - docker exec platypus /bin/bash -c "export DISPLAY=localhost:1.0 && DISPLAY=localhost:1.0 ant -DnativeSever.url=platypus://localhost:8500 -DnativeSever.user=testuser2 -DnativeSever.password=test -Dapplication.source.path=app -DwebSever.url=http://localhost:8080/p-tests -DwebSever.user=testuser2 -DwebSever.password=test -Ddatasource.name.1=eas -Ddatasource.dburl.1=jdbc:mysql://testDb:3306/eas -Ddatasource.dbuser.1=test -Ddatasource.dbpassword.1=test -Ddatasource.dbschema.1=eas -Ddatasource.name.2=easHR  -Ddatasource.dburl.2=jdbc:mysql://testDb:3306/hr -Ddatasource.dbuser.2=test -Ddatasource.dbpassword.2=test -Ddatasource.dbschema.2=hr -Ddatasource.default=eas -Dtestsource.url=file:///platypusTests/ -Dlibs.javaee-web-api-7.0.classpath=/usr/local/apache-tomcat-8.0.39/lib/servlet-api.jar:/usr/local/apache-tomcat-8.0.39/lib/websocket-api.jar -f /platypus/application/src/group/build.xml -Dlibs.junit_4.classpath=/usr/local/ant/lib/junit4.jar -Dlibs.hamcrest.classpath=/usr/local/ant/lib/hamcrest-core.jar -Dtestfx.headless=true -Dnb.internal.action.name=test test"
