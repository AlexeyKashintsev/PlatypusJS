/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PreferencesPanel.java
 *
 * Created on 09.06.2011, 12:13:19
 */
package com.eas.client.settings;

import java.beans.PropertyChangeListener;
import java.util.prefs.Preferences;

/**
 *
 * @author mg
 */
public class PreferencesPanel extends javax.swing.JPanel {

    /** Creates new form PreferencesPanel */
    public PreferencesPanel() {
        initComponents();
        readSettings();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblReportRun = new javax.swing.JLabel();
        edReportRun = new javax.swing.JTextField();
        lblReportPrint = new javax.swing.JLabel();
        edReportPrint = new javax.swing.JTextField();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/eas/client/settings/Bundle"); // NOI18N
        lblReportRun.setText(bundle.getString("lblReportRun.text")); // NOI18N

        edReportRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edReportRunActionPerformed(evt);
            }
        });
        edReportRun.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                edReportRunFocusLost(evt);
            }
        });

        lblReportPrint.setText(bundle.getString("lblReportPrint.text")); // NOI18N

        edReportPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edReportPrintActionPerformed(evt);
            }
        });
        edReportPrint.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                edReportPrintFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblReportRun)
                    .addComponent(lblReportPrint))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(edReportPrint, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                    .addComponent(edReportRun, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(edReportRun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(edReportPrint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblReportPrint)))
                    .addComponent(lblReportRun))
                .addContainerGap(243, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void edReportRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edReportRunActionPerformed
        save();
    }//GEN-LAST:event_edReportRunActionPerformed

    private void edReportRunFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edReportRunFocusLost
        save();
    }//GEN-LAST:event_edReportRunFocusLost

    private void edReportPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edReportPrintActionPerformed
        save();
    }//GEN-LAST:event_edReportPrintActionPerformed

    private void edReportPrintFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edReportPrintFocusLost
        save();
    }//GEN-LAST:event_edReportPrintFocusLost
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField edReportPrint;
    private javax.swing.JTextField edReportRun;
    private javax.swing.JLabel lblReportPrint;
    private javax.swing.JLabel lblReportRun;
    // End of variables declaration//GEN-END:variables

    public String getReportRunCommand() {
        return edReportRun.getText();
    }

    public String getReportPrintCommand() {
        return edReportPrint.getText();
    }

    protected String getStoredReportRunCommand() {
        return Preferences.userRoot().node(SettingsConstants.CLIENT_SETTINGS_NODE).get(SettingsConstants.REPORT_RUN_COMMAND, "");
    }

    protected String getStoredReportPrintCommand() {
        return Preferences.userRoot().node(SettingsConstants.CLIENT_SETTINGS_NODE).get(SettingsConstants.REPORT_PRINT_COMMAND, "");
    }

    public void readSettings() {
        edReportRun.setText(getStoredReportRunCommand());
        edReportPrint.setText(getStoredReportPrintCommand());
    }

    public void save() {
        Preferences.userRoot().node(SettingsConstants.CLIENT_SETTINGS_NODE).put(SettingsConstants.REPORT_RUN_COMMAND, edReportRun.getText());
        Preferences.userRoot().node(SettingsConstants.CLIENT_SETTINGS_NODE).put(SettingsConstants.REPORT_PRINT_COMMAND, edReportPrint.getText());
    }

    public boolean isInputValid() {
        String rRun = getReportRunCommand();
        String rPrint = getReportPrintCommand();
        return rRun != null && !rRun.isEmpty()
                && rPrint != null && !rPrint.isEmpty();
    }

    public boolean isChanged() {
        String srRun = getStoredReportRunCommand();
        String srPrint = getStoredReportPrintCommand();
        String rRun = getReportRunCommand();
        String rPrint = getReportPrintCommand();
        if ((rRun == null) ? (srRun != null) : !rRun.equals(srRun)) {
            return true;
        }
        if ((rPrint == null) ? (srPrint != null) : !rPrint.equals(srPrint)) {
            return true;
        }
        return false;
    }

    @Override
    public void addPropertyChangeListener(PropertyChangeListener l) {
        edReportRun.addPropertyChangeListener("text", l);
        edReportPrint.addPropertyChangeListener("text", l);
    }

    @Override
    public void removePropertyChangeListener(PropertyChangeListener l) {
        edReportRun.removePropertyChangeListener("text", l);
        edReportPrint.removePropertyChangeListener("text", l);
    }
}
